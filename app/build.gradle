apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

def getDateYMD() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

def getDateHM() {
    def date = new Date()
    def formattedDate = date.format('HHmm')
    return formattedDate
}

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.georgeren.myjenkins"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName APP_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
        debug {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "ONLINE", "true"
            buildConfigField "String", "CHANNEL", "\"debugOnLine-xiaomi\""
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "ONLINE", "true"
            buildConfigField "String", "CHANNEL", "\"releaseOnLine-xiaomi\""
        }

//        debugOnline {
//            minifyEnabled true
//            zipAlignEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.debug
//            buildConfigField "boolean", "ONLINE", "true"
//            buildConfigField "String", "CHANNEL", "\"debugOnLine-xiaomi\""
//        }

        releaseOnline {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "ONLINE", "true"
            buildConfigField "String", "CHANNEL", "\"releaseOnLine-xiaomi\""
        }

//        debugOffline {
//            minifyEnabled true
//            zipAlignEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.debug
//            buildConfigField "boolean", "ONLINE", "false"
//            buildConfigField "String", "CHANNEL", "\"debugOffline-xiaomi\""
//        }
        releaseOffline {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "boolean", "ONLINE", "false"
            buildConfigField "String", "CHANNEL", "\"releaseOffline-xiaomi\""
        }


    }

    productFlavors {
        t360 {
        }

        baidu {
        }
        oppo {
            manifestPlaceholders = [
                    MTA_APPKEY   : "xx",
                    MTA_CHANNEL  : "oppo",
                    XG_ACCESS_ID : "xx",
                    XG_ACCESS_KEY: "xx",
                    UMENG_CHANNEL: "oppo"]
        }

        yingyongbao {
        }
        xiaomi {
        }
        vivo {
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [MTA_APPKEY   : "xx",
                                                 MTA_CHANNEL  : name,
                                                 XG_ACCESS_ID : "xx",
                                                 XG_ACCESS_KEY: "xx",
                                                 UMENG_CHANNEL: name]
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    allprojects {
        repositories {
            mavenCentral()
            maven { url "https://jitpack.io" }
        }
    }


    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
//    compile 'junit:junit:4.12'
//    compile 'com.android.support.test:runner:1.0.1'
//    compile 'com.android.support.test.espresso:espresso-core:3.0.1'
}
